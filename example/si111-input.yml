# Sample input file for calculating SHG yield for the Si(111)(1x1):H surface
# This is in YAML, so please preserve indentation below!

# Establish reflectance model, see PRB 93, 235304 (2016). Available choices:
# 3-layer, 2-layer-fresnel, 2-layer-bulk, 2-layer-vacuum, and 3-layer-hybrid.
# Anything other than '3-layer' will exclude multiple reflections. When in 
# doubt, use '3-layer'.
mode:       3-layer

# Required calculation parameters
parameters:
    theta: 65           # angle of incidence in degrees
    phi:   30           # azimuthal angle in degrees
    sigma: 0.10         # gaussian output broadening in eV

# Multiple reflection framework
multiref:
    enable:    yes      # if multiple reflections are taken into account. Can
                        # be 'yes' or 'no'; if 'no', next values are ignored.
    thickness: 10       # thickness "d" of the thin layer, in nm
    depth:     average  # depth "d2" of the nonlinear polarization, in nm. can
                        # be a float or 'average'. See Eqs (21) and 22 of 
                        # PRB 93, 235304 (2016).

# chi1: linear susceptibility tensor.
# Paths to files for chib (bulk) and chil (layered), and normalization of chil.
# For information about normalizing, see PRB 92, 245308 (2015). File columns are
# Energy(1w) Re[chi_xx] Im[chi_xx] Re[chi_yy] Im[chi_yy] Re[chi_zz] Im[chi_zz].
chi1:
    chib: chi1-linear/SiBulk-chi1-xx_yy_zz
    chil: chi1-linear/SiH1x1-chi1-xx_yy_zz
    norm: 1.2659296143

# chi2: nonlinear susceptibility tensor 
# Components should be in separate files, and listed separately. Symmetry 
# relations can be represented here. There are 4 options for each component:
#
# 1. ZERO if it is not listed or commented out (i.e. '# xxx: ...')
# 2. ZERO if you give it a value of 0, i.e     (i.e. 'xxx: 0')         
# 3. Loaded from file if path is given         (i.e. 'xxx: ../SiH1x1-chi2-xxx')
# 4. Has some relation to another component    (i.e. 'xyy: -xxx')
#
# File columns should be organized as Energy(1w) Re[1w] Im[1w] Re[2w] Im[2w].
chi2:
    xxx: chi2-nonlinear/SiH1x1-chi2-xxx
    xyy: chi2-nonlinear/SiH1x1-chi2-xyy
    xzz: chi2-nonlinear/SiH1x1-chi2-xzz
    xyz: chi2-nonlinear/SiH1x1-chi2-xyz
    xxz: chi2-nonlinear/SiH1x1-chi2-xxz
    xxy: chi2-nonlinear/SiH1x1-chi2-xxy
    yxx: chi2-nonlinear/SiH1x1-chi2-yxx
    yyy: chi2-nonlinear/SiH1x1-chi2-yyy
    yzz: chi2-nonlinear/SiH1x1-chi2-yzz
    yyz: chi2-nonlinear/SiH1x1-chi2-yyz
    yxz: chi2-nonlinear/SiH1x1-chi2-yxz
    yxy: chi2-nonlinear/SiH1x1-chi2-yxy
    zxx: chi2-nonlinear/SiH1x1-chi2-zxx
    zyy: chi2-nonlinear/SiH1x1-chi2-zyy
    zzz: chi2-nonlinear/SiH1x1-chi2-zzz
    zyz: chi2-nonlinear/SiH1x1-chi2-zyz
    zxz: chi2-nonlinear/SiH1x1-chi2-zxz
    zxy: chi2-nonlinear/SiH1x1-chi2-zxy

# Path to desired output file
output:     si111-shgyield.out
